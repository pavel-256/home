{"version":3,"sources":["components/ShowRoom.js","components/addRoom.js","components/Device.js","components/addDevice.js","components/Room.js","App.js","serviceWorker.js","index.js"],"names":["ShowRoom","props","state","type","name","color","devices","style","backgroundColor","this","to","align","className","Component","AddRoom","handelChange","bind","validation","event","target","value","setState","preventDefault","length","alert","history","push","addRoom","onSubmit","onChange","selected","disabled","placeholder","maxLength","withRouter","Device","device","condition","index","conDitionProduct","turnOnOff","onClick","addDevice","showDevice","id","addProduct","hideAddproduct","e","some","element","sendDevice","console","log","devsArray","prodIndex","devCondition","visibility","map","item","i","theDeviceArray","Room","newDevice","sendData","indexRoom","indexProduct","updateStatus","App","list","newProduct","statusCondition","exact","path","val","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.070d003e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class ShowRoom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.type,\r\n      name: this.props.name,\r\n      color: this.props.color,\r\n      devices: this.props.devices,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      backgroundColor: this.state.color,\r\n    };\r\n    return (\r\n      <Link to={`/room/${this.state.name}`}>\r\n        <div align=\"center\" className=\"rooms\" style={style} type=\"button\">\r\n          <div className=\"room\">\r\n            <h1 className=\"room_index\">{this.state.name}</h1>\r\n            <h1 className=\"room_title\">{this.state.type}</h1>\r\n            <h1 className=\"room_title\">{this.state.color}</h1>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Route } from \"react-router-dom\";\r\n\r\nclass AddRoom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: \"BedRoom\",\r\n      name: \"\",\r\n      color: \"\",\r\n      devices: [],\r\n    };\r\n\r\n    this.handelChange = this.handelChange.bind(this);\r\n    this.validation = this.validation.bind(this);\r\n  }\r\n\r\n  handelChange(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      ...this.state,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  validation(event) {\r\n    event.preventDefault();\r\n\r\n    if (this.state.name.length < 1) {\r\n      alert(\"the name must be more then 1 letter\");\r\n      this.props.history.push(\"/\");\r\n    } else {\r\n      this.props.addRoom(\r\n        this.state.type,\r\n        this.state.name,\r\n        this.state.color,\r\n        this.state.devices\r\n      );\r\n      this.props.history.push(\"/\"); // <--- The page you want to redirect your user to.   props.history.push - fixed\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div align=\"center\">\r\n          <div className=\"home mt-5\">\r\n            <h1>Smart House</h1>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <form onSubmit={this.validation} className=\"form-group\">\r\n              <select\r\n                name=\"type\"\r\n                onChange={this.handelChange}\r\n                className=\"browser-default custom-type col-5 \"\r\n              >\r\n                <option selected=\"true\" disabled=\"disabled\">\r\n                  Choose room\r\n                </option>\r\n                <option>BedRoom</option>\r\n                <option>Bathroom/Toilet</option>\r\n                <option>Kitchen</option>\r\n              </select>\r\n              <br />\r\n              <br />\r\n              <input\r\n                onChange={this.handelChange}\r\n                placeholder=\"Enter name of the room\"\r\n                maxLength=\"5\"\r\n                type=\"text\"\r\n                value={this.state.name}\r\n                name=\"name\"\r\n                className=\"form-control col-5\"\r\n              />\r\n              <br />\r\n              <input\r\n                onChange={this.handelChange}\r\n                placeholder=\"Enter color of the room\"\r\n                type=\"text\"\r\n                value={this.state.color}\r\n                name=\"color\"\r\n                className=\"form-control col-5\"\r\n              />\r\n              <br />\r\n              <br />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-info btn-lg rounded-pill \"\r\n              >\r\n                Create Room\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddRoom);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Device extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      device: this.props.device,\r\n      condition: this.props.condition,\r\n      index: this.props.index,\r\n    };\r\n\r\n    this.conDitionProduct = this.conDitionProduct.bind(this);\r\n  }\r\n\r\n  conDitionProduct() {\r\n    this.props.turnOnOff(this.state.index);\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      backgroundColor: this.state.condition ? \"green\" : \"red\",\r\n    };\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"viewProducts\"\r\n          onClick={this.conDitionProduct}\r\n          style={style}\r\n        >\r\n          {this.state.device}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Device from \"./Device\";\r\n\r\nexport default class addDevice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.type,\r\n      name: this.props.name,\r\n      devices: this.props.devices,\r\n      device: \"Air-condotioner\",\r\n      showDevice: \"\",\r\n      id: this.props.id, // room index\r\n    };\r\n\r\n    this.addProduct = this.addProduct.bind(this);\r\n    this.handelChange = this.handelChange.bind(this);\r\n    this.hideAddproduct = this.hideAddproduct.bind(this);\r\n    this.turnOnOff = this.turnOnOff.bind(this);\r\n    this.validation = this.validation.bind(this);\r\n  }\r\n\r\n  handelChange(e) {\r\n    this.setState({\r\n      device: e.target.value,\r\n    });\r\n  }\r\n\r\n  validation() {\r\n    const stereo = (element) => element.type === \"Stereo-system\";\r\n    if (this.state.devices.length < 5) {\r\n      if (this.state.device == \"Stereo-system\") {\r\n        if (this.state.devices.some(stereo)) {\r\n          alert(\" Only one stereo in this room ! \");\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.state.devices.length < 5) {\r\n      if (\r\n        (this.state.device == \"Boiler\" && this.state.type == \"BedRoom\") ||\r\n        (this.state.device == \"Boiler\" && this.state.type == \"Kitchen\")\r\n      ) {\r\n        alert(\"You can not add boiler here!\");\r\n      } else {\r\n        this.addProduct();\r\n      }\r\n    } else {\r\n      alert(\"You reached the maximum of devices!\");\r\n    }\r\n  }\r\n\r\n  addProduct() {\r\n    this.props.sendDevice(this.state.device);\r\n    console.log(this.state.devices);\r\n  }\r\n\r\n  hideAddproduct() {\r\n    this.setState({\r\n      showDevice: \"visible\",\r\n    });\r\n\r\n    console.log(this.state.devsArray);\r\n  }\r\n\r\n  turnOnOff(prodIndex) {\r\n    this.props.devCondition(this.state.id, prodIndex);\r\n    console.log(this.state.id, prodIndex);\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      visibility: this.state.showDevice,\r\n    };\r\n    return (\r\n      <div>\r\n        <div style={style} className=\"producOption\">\r\n          <div>\r\n            <div className=\"mt-3\">\r\n              <select onChange={this.handelChange}>\r\n                <option value=\"Air-conditioner\">Air-conditioner</option>\r\n                <option value=\"Boiler\">Boiler</option>\r\n                <option value=\"Stereo-system\">Stereo-system</option>\r\n                <option value=\"Lamp\">Lamp</option>\r\n              </select>\r\n\r\n              <br />\r\n              <br />\r\n              <button\r\n                onClick={this.validation}\r\n                className=\"btn btn-dark rounded-pill\"\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div align=\"center\" className=\"products\">\r\n          <div className=\"product\">\r\n            {this.state.devices.map((item, i) => {\r\n              return (\r\n                <Device\r\n                  turnOnOff={this.turnOnOff}\r\n                  theDeviceArray={this.theDeviceArray}\r\n                  device={item.type}\r\n                  condition={item.condition}\r\n                  index={i}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <button\r\n          onClick={this.hideAddproduct}\r\n          className=\"btn btn-info roomAddProduct rounded-pill\"\r\n        >\r\n          Add Product\r\n        </button>\r\n        <Link to=\"/\">\r\n          <button className=\"backhome btn btn-warning\">Back Home</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport AddDevice from \"./addDevice\";\r\n\r\nexport default class Room extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      type: this.props.type,\r\n      name: this.props.name,\r\n      color: this.props.color,\r\n      devices: this.props.devices,\r\n      index: this.props.index, // index of room\r\n    };\r\n\r\n    this.sendDevice = this.sendDevice.bind(this);\r\n    this.devCondition = this.devCondition.bind(this);\r\n  }\r\n\r\n  sendDevice(newDevice) {\r\n    this.props.sendData(this.state.index, newDevice);\r\n  }\r\n\r\n  devCondition(indexRoom, indexProduct) {\r\n    this.props.updateStatus(indexRoom, indexProduct);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div align=\"center\">\r\n          <div className=\"home mt-5\">\r\n            <h1 className=\"mb-4\">Smart House</h1>\r\n\r\n            <h3>Name of the room : {this.state.name}</h3>\r\n            <h3>Type of the room :{this.state.type} </h3>\r\n\r\n            <AddDevice\r\n              devices={this.state.devices}\r\n              sendDevice={this.sendDevice}\r\n              devCondition={this.devCondition}\r\n              id={this.state.index}\r\n              type={this.state.type}\r\n              name={this.state.name}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport ShowRoom from \"./components/ShowRoom\";\nimport Addroom from \"./components/addRoom\";\nimport Room from \"./components/Room\";\n\nexport default class App extends Component {\n  state = {\n    list: [],\n  };\n\n  addRoom = (type, name, color, devices) => {\n    this.setState({\n      list: [\n        ...this.state.list,\n        {\n          type: type,\n          name: name,\n          color: color,\n          devices: devices,\n        },\n      ],\n    });\n    console.log(this.state.list);\n  };\n\n  addDevice = (id, type) => {\n    const newProduct = [...this.state.list];\n\n    newProduct[id].devices.push({ type: type, condition: false });\n\n    this.setState({ list: newProduct });\n\n    console.log(this.state.list);\n  };\n\n  updateStatus = (indexRoom, indexProduct) => {\n    const statusCondition = [...this.state.list];\n\n    statusCondition[indexRoom].devices[\n      indexProduct\n    ].condition = !statusCondition[indexRoom].devices[indexProduct].condition;\n\n    this.setState({ list: statusCondition });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <div align=\"center\">\n                <div className=\"home mt-5\">\n                  <h1 className=\"mb-4\">Smart House</h1>\n                  <div>\n                    {this.state.list.map((val, index) => {\n                      return (\n                        <Route\n                          exact\n                          path=\"/\"\n                          component={() => (\n                            <ShowRoom\n                              type={val.type}\n                              name={val.name}\n                              color={val.color}\n                              devices={val.devices}\n                              index={index}\n                            />\n                          )}\n                        />\n                      );\n                    })}\n                  </div>\n                  <Link to=\"/addroom\">\n                    <button className=\"Addroom btn btn-info addrooomBtn rounded-pill btn-lg\">\n                      Add Room\n                    </button>\n                  </Link>\n                </div>\n              </div>\n            </Route>\n            <Route\n              exact\n              path=\"/addroom\"\n              component={() => {\n                return <Addroom addRoom={this.addRoom} />;\n              }}\n            />\n            <div>\n              {this.state.list.map((val, index) => {\n                return (\n                  <Route\n                    exact\n                    path={`/room/${val.name}`}\n                    component={() => (\n                      <Room\n                        updateStatus={this.updateStatus}\n                        sendData={this.addDevice}\n                        type={val.type}\n                        name={val.name}\n                        color={val.color}\n                        devices={val.devices}\n                        index={index}\n                      />\n                    )}\n                  />\n                );\n              })}\n            </div>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}